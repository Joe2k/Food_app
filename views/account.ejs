<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no,maximum-scale=1,user-scalable=no">
    <title>My Account</title>
    <link rel="stylesheet" href="/home_assets/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Catamaran:100,200,300,400,500,600,700,800,900">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Lato:100,100i,300,300i,400,400i,700,700i,900,900i">
    <link rel="stylesheet" href="/home_assets/home_css/untitled.css">
    <link rel="stylesheet" href="/css/styles.css">
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js'></script>
    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css' rel='stylesheet' />
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.2.0/dist/leaflet.css" />
    <link rel="stylesheet" href="leaflet-routing-machine.css" />
    <style>
        .map {
            position: absolute;
            top: 0;
            bottom: 0;
            width: 100%;

        }

    </style>
</head>

<body>
<nav class="navbar navbar-dark navbar-expand-lg fixed-top bg-dark navbar-custom" style="color: rgb(194,74,74);background-color: rgb(255,255,255);">
    <div class="container"><a class="navbar-brand" href="/home">FOoD</a><button data-toggle="collapse" class="navbar-toggler" data-target="#navbarResponsive"><span class="navbar-toggler-icon"></span></button>
        <div class="collapse navbar-collapse" id="navbarResponsive" style="color: rgb(242,0,0);">
            <ul class="nav navbar-nav ml-auto">
                <li class="nav-item" role="presentation"><a class="nav-link" href="/sell">Sell</a></li>
                <li class="nav-item" role="presentation"><a class="nav-link" href="/buy" style="color: rgba(255,255,255,0.5);">Buy</a></li>
            </ul>
        </div>
    </div>
</nav>
<header class="masthead text-center text-white">
    <div class="masthead-content">
        <div class="container">
            <h1 class="masthead-heading mb-0">My Account</h1>
            <h2 class="masthead-subheading mb-0">Hi <%=newname%></h2>
        </div>
    </div>
    <div class="bg-circle-1 bg-circle"></div>
    <div class="bg-circle-2 bg-circle"></div>
    <div class="bg-circle-3 bg-circle"></div>
    <div class="bg-circle-4 bg-circle"></div>
</header>
<section class="container">
    <h2>Sold Items</h2>
    <div class="container">
        <div class="table-responsive border rounded-0 border-primary shadow-lg" style="margin: 20px 0px;border-style: dotted;">
            <table class="table table-striped">
                <thead>
                <tr>
                    <th class="text-center">Name</th>
                </tr>
                </thead>
                <tbody>

                    <%for(var i=0;i<docs.selling.length;i++){%>
                    <tr>
                    <td class="text-center"><%=docs.selling[i]%></td>
                    </tr>
                        <%}%>

                <tr></tr>
                </tbody>
            </table>
        </div>
    </div>


    <h2>Bought Items</h2>

    <div class="container">
        <div class="table-responsive border rounded-0 border-primary shadow-lg" style="margin: 20px 0px;border-style: dotted;">
            <table class="table table-striped">
                <thead>
                <tr>
                    <th class="text-center">Name</th>
                    <th class="text-center">Qty</th>
                </tr>
                </thead>
                <tbody style="position: relative;>
                    <%var j=0;%>
                        <%var k=0;%>
                    <%for(var i=0;i<docs.orders.length;i++){%>
                    <%for(const property in docs.orders[i]){%>
                    <%if(property!="total"){%>
                    <tr style="position: relative;">
                    <td class="text-center"><%=property%></td>
                    <td class="text-center"><%=docs.orders[i][property]%></td>
                    </tr>
                    <input id="lat<%=k%>" value="<%=docs.orderLocations[j]%>" hidden>
                    <%j++;%>
                    <input id="long<%=k%>" value="<%=docs.orderLocations[j]%>" hidden>
                    <%j++;%>
                <tr>
                    <td>
                    <div style="position: relative; width: 90%;height:250px;" class="container"><div class="map" id='map<%=k%>'></div>
                        <%k++;%>
                    </div>
                    </td>
                </tr>
                    <%}%>
                    <%}%>
                    <%}%>

                </tbody>
            </table>
        </div>
    </div>


    <div class="text-center" style="padding-bottom: 30px;">
    <a href="/home" class="text-center" style="margin-right: auto; margin-left: auto;box-sizing: content-box;">
    <button class="btn btn-primary " type="button"><svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-arrow-left" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z"/>
            </svg>  &nbsp;Go Back</button></a></div>
<input id="userLat" name="userLat" value="<%=userLat%>" hidden>
    <input id="userLong" name="userLong" value="<%=userLong%>" hidden>

</section>
<footer class="bg-black" style="padding-top: 30px;padding-bottom: 30px;">
    <div class="container">
        <p class="text-center text-white m-0 small">Made with <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-heart-fill" fill="red" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z"/>
            </svg>  by Jonathan</p>
    </div>
</footer>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
<script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js" integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV" crossorigin="anonymous"></script>
<script src="https://unpkg.com/leaflet@1.2.0/dist/leaflet.js"></script>
<script src="leaflet-routing-machine.js"></script>
<script type="text/javascript">
    $(document).on('click','.navbar-collapse',function(e) {
        if( $(e.target).is('a') ) {
            $(this).collapse('hide');
        }
    });
    $(document).ready(function (){
        $(".leaflet-routing-container").hide();
    });

    for(var i=0;i<2;i++){
        var map = L.map('map'+i);

        // L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        //     attribution: '© OpenStreetMap contributors'
        // }).addTo(map);

        L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1Ijoiam9lMmsiLCJhIjoiY2tmanA4bXM2MGtoYTJ0bjRpZ2UxYjl2bCJ9.ntM43CJhueGaDhqGQY4J3g', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
            maxZoom: 18,
            id: 'mapbox/streets-v11',
            tileSize: 512,
            zoomOffset: -1,
            accessToken: 'your.mapbox.access.token'
        }).addTo(map);

        L.Routing.control({
            waypoints: [
                L.latLng($("#userLat")[0].value, $("#userLong")[0].value),
                L.latLng($("#lat"+i)[0].value, $("#long"+i)[0].value)
            ],
            routeWhileDragging: true
        }).addTo(map);
    }







    //     // console.log($("#userLat")[0].value);
    // var maps=[];
    // mapboxgl.accessToken = 'pk.eyJ1Ijoiam9lMmsiLCJhIjoiY2tmanA4bXM2MGtoYTJ0bjRpZ2UxYjl2bCJ9.ntM43CJhueGaDhqGQY4J3g';
    // for(var i=0;i<2;i++){
    //     maps[i] = new mapboxgl.Map({
    //         container: "map"+i,
    //         style: 'mapbox://styles/mapbox/streets-v10',
    //         center: [$("#userLong")[0].value, $("#userLat")[0].value], // starting position
    //         zoom: 12
    //     });
    // }
    // //     var map0 = new mapboxgl.Map({
    // //         container: "map0",
    // //         style: 'mapbox://styles/mapbox/streets-v10',
    // //         center: [$("#userLong")[0].value, $("#userLat")[0].value], // starting position
    // //         zoom: 12
    // //     });
    // // var map1 = new mapboxgl.Map({
    // //     container: "map1",
    // //     style: 'mapbox://styles/mapbox/streets-v10',
    // //     center: [$("#userLong")[0].value, $("#userLat")[0].value], // starting position
    // //     zoom: 12
    // // });
    //     // set the bounds of the map
    //     //var bounds = [[$("#userLong")[0].value-0.2, $("#userLat")[0].value-0.2], [$("#userLong")[0].value+0.2, $("#userLat")[0].value+0.2]];
    //     //map.setMaxBounds(bounds);
    //
    //     // initialize the map canvas to interact with later
    //     //var canvas = map0.getCanvasContainer();
    //
    //     // an arbitrary start will always be the same
    //     // only the end or destination will change
    // var start = [$("#userLong")[0].value, $("#userLat")[0].value];
    //
    //         //var newi=i;
    //     //console.log(newi);
    // for(var i=0;i<2;i++){
    //     maps[i].on('load', function (newi) {
    //         console.log(newi.target._container.id);
    //         // make an initial directions request that
    //         // starts and ends at the same location
    //         //
    //         //getRoute(start);
    //         // Add starting point to the map
    //         for(var j=0;j<2;j++){
    //             mapboxgl.accessToken = 'pk.eyJ1Ijoiam9lMmsiLCJhIjoiY2tmanA4bXM2MGtoYTJ0bjRpZ2UxYjl2bCJ9.ntM43CJhueGaDhqGQY4J3g';
    //                 // make a directions request using cycling profile
    //                 // an arbitrary start will always be the same
    //                 // only the end or destination will change
    //                 var start = [$("#userLong")[0].value, $("#userLat")[0].value];
    //                 var url = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + start[0] + ',' + start[1] + ';' + start[0] + ',' + start[1] + '?steps=true&geometries=geojson&access_token=' + 'pk.eyJ1Ijoiam9lMmsiLCJhIjoiY2tmanA4bXM2MGtoYTJ0bjRpZ2UxYjl2bCJ9.ntM43CJhueGaDhqGQY4J3g';
    //             console.log(url);
    //                 // make an XHR request https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest
    //                 var req = new XMLHttpRequest();
    //                 req.open('GET', url, true);
    //                 req.onload = function () {
    //
    //                     var json = JSON.parse(req.response);
    //                     var data = json.routes[0];
    //                     var route = data.geometry.coordinates;
    //                     var geojson = {
    //                         type: 'Feature',
    //                         properties: {},
    //                         geometry: {
    //                             type: 'LineString',
    //                             coordinates: route
    //                         }
    //                     };
    //                     // if the route already exists on the map, reset it using setData
    //                      // otherwise, make a new request
    //                         maps[0].addLayer({
    //                             id: 'route',
    //                             type: 'line',
    //                             source: {
    //                                 type: 'geojson',
    //                                 data: {
    //                                     type: 'Feature',
    //                                     properties: {},
    //                                     geometry: {
    //                                         type: 'LineString',
    //                                         coordinates: geojson
    //                                     }
    //                                 }
    //                             },
    //                             layout: {
    //                                 'line-join': 'round',
    //                                 'line-cap': 'round'
    //                             },
    //                             paint: {
    //                                 'line-color': '#3887be',
    //                                 'line-width': 5,
    //                                 'line-opacity': 0.75
    //                             }
    //                         });
    //
    //                     // add turn instructions here at the end
    //                 };
    //                 req.send();
    //
    //
    //             maps[j].addLayer({
    //                 id: 'point'+newi.target._container.id,
    //                 type: 'circle',
    //                 source: {
    //                     type: 'geojson',
    //                     data: {
    //                         type: 'FeatureCollection',
    //                         features: [{
    //                             type: 'Feature',
    //                             properties: {},
    //                             geometry: {
    //                                 type: 'Point',
    //                                 coordinates: start
    //                             }
    //                         }
    //                         ]
    //                     }
    //                 },
    //                 paint: {
    //                     'circle-radius': 10,
    //                     'circle-color': '#3887be'
    //                 }
    //             });
    //             maps[j].addLayer({
    //                 id: 'end'+newi.target._container.id,
    //                 type: 'circle',
    //                 source: {
    //                     type: 'geojson',
    //                     data: {
    //                         type: 'FeatureCollection',
    //                         features: [{
    //                             type: 'Feature',
    //                             properties: {},
    //                             geometry: {
    //                                 type: 'Point',
    //                                 coordinates: [$("#long0")[0].value, $("#lat0")[0].value]
    //                             }
    //                         }]
    //                     }
    //                 },
    //                 paint: {
    //                     'circle-radius': 10,
    //                     'circle-color': '#f30'
    //                 }
    //             });
    //
    //
    //             //getRoute([$("#long0")[0].value, $("#lat0")[0].value]);
    //
    //             var url = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + start[0] + ',' + start[1] + ';' + $("#long0")[0].value + ',' + $("#lat0")[0].value + '?steps=true&geometries=geojson&access_token=' + mapboxgl.accessToken;
    //
    //             // make an XHR request https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest
    //             var req = new XMLHttpRequest();
    //             req.open('GET', url, true);
    //             req.onload = function () {
    //                 var json = JSON.parse(req.response);
    //                 var data = json.routes[0];
    //                 var route = data.geometry.coordinates;
    //                 var geojson = {
    //                     type: 'Feature',
    //                     properties: {},
    //                     geometry: {
    //                         type: 'LineString',
    //                         coordinates: route
    //                     }
    //                 };
    //                 // if the route already exists on the map, reset it using setData
    //                 // otherwise, make a new request
    //                 maps[0].addLayer({
    //                     id: 'route',
    //                     type: 'line',
    //                     source: {
    //                         type: 'geojson',
    //                         data: {
    //                             type: 'Feature',
    //                             properties: {},
    //                             geometry: {
    //                                 type: 'LineString',
    //                                 coordinates: geojson
    //                             }
    //                         }
    //                     },
    //                     layout: {
    //                         'line-join': 'round',
    //                         'line-cap': 'round'
    //                     },
    //                     paint: {
    //                         'line-color': '#3887be',
    //                         'line-width': 5,
    //                         'line-opacity': 0.75
    //                     }
    //                 });
    //
    //                 // add turn instructions here at the end
    //             };
    //             req.send();
    //
    //         }
    //
    //         // this is where the code from the next step will go
    //         //getRoute([$("#long0")[0].value, $("#lat0")[0].value]);
    //     });
    // }
    //





</script>
</body>
</html>